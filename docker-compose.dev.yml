# HyperDoc AI Powerhouse - Development Environment

version: '3.8'

services:
  # AI Orchestrator - Development Mode
  orchestrator-api:
    build:
      context: ./apps/orchestrator-api
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - POSTGRES_URL=postgresql://dev_user:dev_pass@postgres:5432/hyperdoc_dev
      - REDIS_URL=redis://redis:6379
      # Load your GlacierEQ API keys from .env
    env_file:
      - .env
    ports:
      - "8000:8000"
      - "9229:9229" # Node.js debugging
    volumes:
      - ./apps/orchestrator-api/src:/app/src
      - ./apps/orchestrator-api/logs:/app/logs
      - ./submodules:/app/submodules:ro
    depends_on:
      - redis
      - postgres
    networks:
      - hyperdoc-dev
    command: pnpm run dev

  # PostgreSQL - Development Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=hyperdoc_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_pass
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./infra/postgres/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - hyperdoc-dev

  # Redis - Development Cache
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
      - "8001:8001" # Redis Insight
    volumes:
      - redis-dev-data:/data
    networks:
      - hyperdoc-dev

  # ONLYOFFICE - Development DocumentServer
  onlyoffice-dev:
    image: onlyoffice/documentserver:latest
    environment:
      - JWT_ENABLED=false # Disabled for development
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_NAME=onlyoffice_dev
      - DB_USER=dev_user
      - DB_PWD=dev_pass
      - REDIS_SERVER_HOST=redis
    ports:
      - "80:80"
    depends_on:
      - postgres
      - redis
    networks:
      - hyperdoc-dev

  # Development utilities
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    networks:
      - hyperdoc-dev

volumes:
  postgres-dev-data:
  redis-dev-data:

networks:
  hyperdoc-dev:
    name: hyperdoc-dev-network